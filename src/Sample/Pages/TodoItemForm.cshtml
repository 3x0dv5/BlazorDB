@using Sample.Models
@inject TodoContext Context

<form>
    <div class="form-group row">
        <label for="staticId" class="col-sm-2 col-form-label">Id</label>
        <div class="col-sm-10">
            <input type="text" readonly class="form-control-plaintext" id="staticId" value="@Todo.Id">
        </div>
    </div>
    <div class="form-group row">
        <label for="inputText" class="col-sm-2 col-form-label">Text</label>
        <div class="col-sm-10">
            <input type="text" class="form-control" id="inputText" placeholder="Enter the text of the todo" bind="@Todo.Text" />
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2 form-check-label" for="checkDone">Done</label>
        <div class="col-sm-10">
            <input type="checkbox" class="form-check-input" id="checkDone" bind="@Todo.IsDone" />
        </div>
    </div>
    <div class="col-sm-10 offset-sm-2">
        <button type="submit" class="btn btn-primary" onclick="@onclick">Submit</button>
    </div>
</form>

@functions {
    [Parameter] int SelectedId { get; set; }
    [Parameter] Action NewTodoAdded { get; set; }

    TodoItem Todo { get; set; } = new TodoItem();

    protected async override Task OnInitAsync()
    {
        Console.WriteLine("OnInitAsync");
        await Context.Initialize();
        if (SelectedId == 0) Todo = new TodoItem();
        else
        {
            SetTodo();
        }
    }

    protected async override Task OnParametersSetAsync()
    {
        Console.WriteLine("OnParametersSetAsync");
        if (Context.Todos == null)
        {
            Console.WriteLine("OnParametersSetAsync - init");
            await Context.Initialize();
        }
        SetTodo();
    }

    void SetTodo()
    {
        if (Context.Todos == null) return;
        var query = from todo in Context.Todos
                    where todo.Id == SelectedId
                    select todo;
        var item = query.FirstOrDefault();
        Todo = item != null ? item : new TodoItem();
    }

    async void onclick()
    {
        if (Todo.Id == 0)
        {
            Context.Todos.Add(Todo); //add new todo to the context
        }
        await Context.SaveChanges();
        StateHasChanged();
        NewTodoAdded();
    }
}